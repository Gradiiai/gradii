import { NextRequest } from 'next/server';
import { createV2Response } from './middleware';

/**
 * V2 API Root Endpoint
 * Provides API information and available endpoints
 */
export async function GET(request: NextRequest) {
  const baseUrl = new URL(request.url).origin;
  
  const apiInfo = {
    name: 'Interview AI API',
    version: '2.0',
    description: 'RESTful API for Interview AI platform with token-based authentication',
    documentation: `${baseUrl}/api/v2/docs`,
    authentication: {
      type: 'Bearer Token',
      header: 'Authorization: Bearer iai_your_token_here',
      note: 'Tokens can be generated by super admins in the admin panel'
    },
    endpoints: {
      // Job Management
      jobs: {
        list: 'GET /api/v2/jobs',
        create: 'POST /api/v2/jobs',
        get: 'GET /api/v2/jobs/{id}',
        update: 'PUT /api/v2/jobs/{id}',
        delete: 'DELETE /api/v2/jobs/{id}',
        permissions: ['jobs:read', 'jobs:write']
      },
      // Candidate Management
      candidates: {
        list: 'GET /api/v2/candidates',
        create: 'POST /api/v2/candidates',
        get: 'GET /api/v2/candidates/{id}',
        update: 'PUT /api/v2/candidates/{id}',
        delete: 'DELETE /api/v2/candidates/{id}',
        permissions: ['candidates:read', 'candidates:write']
      },
      // Interview Management
      interviews: {
        list: 'GET /api/v2/interviews',
        create: 'POST /api/v2/interviews',
        get: 'GET /api/v2/interviews/{id}',
        update: 'PUT /api/v2/interviews/{id}',
        delete: 'DELETE /api/v2/interviews/{id}',
        results: 'GET /api/v2/interviews/{id}/results',
        permissions: ['interviews:read', 'interviews:write']
      },
      // Application Management
      applications: {
        list: 'GET /api/v2/applications',
        create: 'POST /api/v2/applications',
        get: 'GET /api/v2/applications/{id}',
        update: 'PUT /api/v2/applications/{id}',
        permissions: ['applications:read', 'applications:write']
      },
      // Evaluation Management
      evaluations: {
        list: 'GET /api/v2/evaluations',
        get: 'GET /api/v2/evaluations/{id}',
        permissions: ['evaluations:read']
      },
      // Analytics
      analytics: {
        overview: 'GET /api/v2/analytics/overview',
        interviews: 'GET /api/v2/analytics/interviews',
        candidates: 'GET /api/v2/analytics/candidates',
        permissions: ['analytics:read']
      }
    },
    permissions: {
      available: [
        'jobs:read',
        'jobs:write',
        'candidates:read',
        'candidates:write',
        'interviews:read',
        'interviews:write',
        'applications:read',
        'applications:write',
        'evaluations:read',
        'analytics:read'
      ],
      description: 'Permissions control access to specific API endpoints and operations'
    },
    response_format: {
      success: {
        success: true,
        data: '...',
        message: 'Optional success message',
        meta: 'Optional metadata (pagination, etc.)',
        timestamp: '2024-01-01T00:00:00.000Z',
        version: '2.0'
      },
      error: {
        success: false,
        error: 'Error description',
        code: 'ERROR_CODE',
        details: 'Optional error details',
        timestamp: '2024-01-01T00:00:00.000Z',
        version: '2.0'
      }
    },
    pagination: {
      parameters: {
        page: 'Page number (default: 1)',
        limit: 'Items per page (default: 20, max: 100)'
      },
      response: {
        meta: {
          page: 1,
          limit: 20,
          total: 100,
          total_pages: 5,
          has_next: true,
          has_prev: false
        }
      }
    },
    sorting: {
      parameters: {
        sort_by: 'Field to sort by (default: createdAt)',
        sort_order: 'Sort order: asc or desc (default: desc)'
      }
    },
    rate_limits: {
      default: '1000 requests per hour per token',
      note: 'Rate limits can be configured per token by super admins'
    }
  };

  return createV2Response(
    apiInfo,
    200,
    'Interview AI V2 API - Ready for integration'
  );
}